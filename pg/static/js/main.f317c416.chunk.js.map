{"version":3,"sources":["utils/installSw.js","components/StyledDropzone.js","utils/cap.js","utils/notifyService.js","components/AppInfo.js","components/AppList.js","components/MainBar.js","App.js","reportWebVitals.js","index.js"],"names":["navigator","serviceWorker","register","baseStyle","flex","display","flexDirection","alignItems","padding","textAlign","overflowX","borderWidth","borderRadius","borderColor","borderStyle","backgroundColor","color","outline","transition","activeStyle","acceptStyle","rejectStyle","StyledDropzone","props","useDropzone","onDrop","getRootProps","getInputProps","isDragActive","isDragAccept","isDragReject","style","useMemo","className","onClick","event","stopPropagation","children","getAppContainerPage","app","icon","icoUrl","url","type","mime","getType","iconUrl","getIcon","name","startup","getAppContainerManifestJson","service","success","msg","error","warning","notify","info","defaultSetting","anchorOrigin","vertical","horizontal","autoHideDuration","MyApp","enqueueSnackbar","useSnackbar","variant","forEach","el","Fragment","div","document","createElement","body","append","ReactDOM","render","maxSnack","AppInfo","initAppId","appId","useState","setAppId","setName","setStartup","setIcoUrl","setIconUrl","onSaved","appInfoConfig","title","value","setValue","fileList","setFileList","setType","onClose","save","a","Promise","resolve","getFileInfo","file","res","reader","FileReader","onload","e","path","content","target","result","split","isImage","readAsText","readAsDataURL","id","all","map","files","contentType","push","JSON","stringify","cap","directFileList","fetch","method","mode","headers","loadFromMeta","meta","loadMetaFile","rej","inp","accept","onchange","parse","click","useEffect","_","json","AppBar","position","Toolbar","IconButton","edge","aria-label","Typography","width","uuidv4","notifyService","window","open","height","index","TextField","label","marginTop","onChange","paddingTop","acceptedFiles","console","log","length","Button","List","ListItem","ListItemAvatar","Avatar","fontSize","match","ListItemText","primary","secondary","html","png","ico","margin","lineHeight","useStyles","makeStyles","theme","root","palette","background","paper","FolderList","classes","getHandleClickOpen","appIds","setAppIds","changed","setChanged","AppListItem","setMeta","ListItemSecondaryAction","text","fileBlob","Blob","link","setAttribute","URL","createObjectURL","appendChild","createTextNode","xx","addEventListener","data","flexGrow","menuButton","marginRight","spacing","ButtonAppBar","appBar","marginLeft","Transition","React","forwardRef","ref","Slide","direction","FullScreenDialog","setOpen","setCurrentAppId","handleClose","currentAppId","Dialog","fullScreen","TransitionComponent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getElementById"],"mappings":"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","file":"static/js/main.f317c416.chunk.js","sourcesContent":["if ('serviceWorker' in navigator) {\r\n  navigator.serviceWorker.register('./sw.js');\r\n}","import React, {useMemo} from 'react';\r\nimport {useDropzone} from 'react-dropzone';\r\n\r\nconst baseStyle = {\r\n  flex: 1,\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  padding: '20px',\r\n  textAlign:'center',\r\n  overflowX:'hidden',\r\n  borderWidth: 2,\r\n  borderRadius: 2,\r\n  borderColor: '#eeeeee',\r\n  borderStyle: 'dashed',\r\n  backgroundColor: '#fafafa',\r\n  color: '#bdbdbd',\r\n  outline: 'none',\r\n  transition: 'border .24s ease-in-out'\r\n};\r\n\r\nconst activeStyle = {\r\n  borderColor: '#2196f3'\r\n};\r\n\r\nconst acceptStyle = {\r\n  borderColor: '#00e676'\r\n};\r\n\r\nconst rejectStyle = {\r\n  borderColor: '#ff1744'\r\n};\r\n\r\nfunction StyledDropzone(props) {\r\n  const {\r\n    getRootProps,\r\n    getInputProps,\r\n    isDragActive,\r\n    isDragAccept,\r\n    isDragReject\r\n  } = useDropzone({\r\n    onDrop:props.onDrop\r\n  });\r\n\r\n  const style = useMemo(() => ({\r\n    ...baseStyle,\r\n    ...(isDragActive ? activeStyle : {}),\r\n    ...(isDragAccept ? acceptStyle : {}),\r\n    ...(isDragReject ? rejectStyle : {})\r\n  }), [\r\n    isDragActive,\r\n    isDragReject,\r\n    isDragAccept\r\n  ]);\r\n\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div {...getRootProps({style,onClick: event => event.stopPropagation()})}>\r\n        <input {...getInputProps()} />\r\n        {props.children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default StyledDropzone","// create app container\r\nimport mime from 'mime'\r\n\r\n  function getAppContainerPage(app){\r\n    function getIcon(app){\r\n      if(app.icoUrl !== ''){\r\n        return {\r\n          url:'./root' + app.icoUrl,\r\n          type:mime.getType(app.icoUrl)\r\n        };\r\n      }\r\n      if(app.iconUrl !== ''){\r\n        return {\r\n          url:app.iconUrl,\r\n          type:mime.getType(app.iconUrl)\r\n        };\r\n      }\r\n      return {\r\n        url:'./favicon.ico',\r\n        type:'image/png'\r\n      }\r\n    }\r\n\r\n    var icon = getIcon(app)\r\n\r\n    return `\r\n    <!DOCTYPE html>\r\n    <html lang=\"en\">\r\n    <head>\r\n      <meta charset=\"UTF-8\">\r\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n      <link rel=\"manifest\" href=\"./manifest.json\" />\r\n      <link rel=\"icon\" href=\"${icon.url}\" type=\"${icon.type}\"/>\r\n      <title>${app.name}</title>\r\n    </head>\r\n    <body>\r\n      <iframe id=\"container\" src=\"./root${app.startup}\"></iframe>\r\n    </body>\r\n    <style>\r\n      html, body, #container{\r\n        height: 100%;\r\n        width: 100%;\r\n        margin: 0;\r\n        border: 0;\r\n      }\r\n    </style>\r\n    <script>\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.register('../../../sw.js',{scope:'./root${app.startup}'});\r\n    }\r\n    </script>\r\n    </html>\r\n    `\r\n  }\r\n  function getAppContainerManifestJson(app){\r\n    return `\r\n    {\r\n      \"short_name\": \"${app.name}\",\r\n      \"name\": \"${app.name}\",\r\n      \"icons\": [\r\n\r\n        {\r\n          \"src\": ${(app.iconUrl==='')?`\"./logo192.png\"`:`\"./root${app.iconUrl}\"`},\r\n          \"type\": \"image/png\",\r\n          \"sizes\": \"256x256 192x192 128x128 64x64 32x32 24x24 16x16\"\r\n        }\r\n      ],\r\n      \"start_url\": \"./index.html\",\r\n      \"display\": \"standalone\",\r\n      \"theme_color\": \"#000000\",\r\n      \"background_color\": \"#ffffff\"\r\n    }\r\n    \r\n    `\r\n  }\r\n  // ${(app.icoUrl==='')?`\"/favicon.ico\"`:`\"./root${app.icoUrl}\"`}\r\n  // \r\n\r\n\r\n  export default {getAppContainerPage,getAppContainerManifestJson}\r\n\r\n\r\n","\r\nimport React,{useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport { SnackbarProvider, useSnackbar } from 'notistack';\r\n\r\nvar service = {\r\n  success(msg){},\r\n  error(msg){},\r\n  warning(msg){},\r\n  notify(msg){},\r\n  info(msg){}\r\n}\r\n\r\nconst defaultSetting = {\r\n  anchorOrigin: {\r\n    vertical: 'bottom',\r\n    horizontal: 'center',\r\n  },\r\n  autoHideDuration: 3000,\r\n}\r\n\r\nfunction MyApp() {\r\n  const { enqueueSnackbar } = useSnackbar();\r\n  service.notify = (msg)=>{\r\n    enqueueSnackbar(msg, { ...defaultSetting, variant:'default' });\r\n  }\r\n  ['success','error','warning','info'].forEach(el=>{\r\n    service[el] = (msg)=>{\r\n      enqueueSnackbar(msg, { ...defaultSetting,variant:el });\r\n    }\r\n  })\r\n\r\n\r\n  return (\r\n    <React.Fragment></React.Fragment>\r\n  );\r\n}\r\n\r\n\r\nvar div = document.createElement('div')\r\ndocument.body.append(div)\r\nReactDOM.render(<SnackbarProvider maxSnack={3}>\r\n  <MyApp />\r\n</SnackbarProvider>,div)\r\n\r\nexport default service","\r\nimport List from '@material-ui/core/List';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport {useDropzone} from 'react-dropzone'\r\nimport React, { useEffect ,useState, useCallback}  from 'react';\r\nimport ImageIcon from '@material-ui/icons/Image';\r\nimport StyledDropzone from './StyledDropzone'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport PlayArrow from '@material-ui/icons/PlayArrow';\r\nimport NavigationIcon from '@material-ui/icons/Navigation';\r\nimport { Button } from '@material-ui/core';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport mime from 'mime'\r\nimport cap from '../utils/cap'\r\n\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport PublishIcon from '@material-ui/icons/Publish';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport notifyService from '../utils/notifyService'\r\n\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\n// SaveIcon\r\n// PlayCircleFilledIcon\r\nexport default function AppInfo(props){\r\n\r\n  const initAppId = props.appId\r\n  const [appId,setAppId] = useState(initAppId)\r\n  const [name, setName] = useState('')\r\n  const [startup,setStartup] = useState('')\r\n  const [icoUrl,setIcoUrl] = useState('')\r\n  const [iconUrl,setIconUrl] = useState('')\r\n\r\n  const {onSaved} = props\r\n  \r\n  const appInfoConfig = [{\r\n    title:'程序名称',\r\n    value:name,\r\n    setValue:setName\r\n  },{\r\n    title:'起始文件Url',\r\n    value:startup,\r\n    setValue:setStartup\r\n  },{\r\n    title:'图标ico Url (ico)',\r\n    value:icoUrl,\r\n    setValue:setIcoUrl\r\n  },{\r\n    title:'PWA 图标url (png)',\r\n    value:iconUrl,\r\n    setValue:setIconUrl\r\n  },{\r\n    title:'程序Id',\r\n    value:appId,\r\n    setValue:setAppId\r\n  }]\r\n\r\n  const [fileList, setFileList] = useState([])\r\n  const [type, setType] = useState('file')\r\n  const {onClose} = props\r\n\r\n\r\n\r\n  async function save(){\r\n    new Promise(async (resolve)=>{\r\n      var app = {\r\n        id:'test',\r\n        name:'',\r\n        startup:'',\r\n        fileList:[]\r\n      }\r\n      \r\n      async function getFileInfo(file){\r\n        return new Promise((res)=>{\r\n          var reader = new FileReader()\r\n          reader.onload = (e)=>{\r\n            res({\r\n              name:file.name,\r\n              path:file.path,\r\n              content:e.target.result\r\n            })\r\n          }\r\n          var type = mime.getType(file.path)\r\n          function isImage(type){\r\n            return  type.split('/')[0] === 'image';\r\n          }\r\n          if(isImage(type)){\r\n            reader.readAsDataURL(file)\r\n          }else{\r\n            reader.readAsText(file)\r\n          }\r\n        });      \r\n      }\r\n  \r\n      app.id = appId\r\n      app.name = name\r\n      app.startup = startup\r\n      app.icoUrl = icoUrl\r\n      app.iconUrl = iconUrl\r\n  \r\n      if(type === 'file'){\r\n        var files = await Promise.all(fileList.map(getFileInfo))\r\n      }else{\r\n        var files = fileList\r\n      }\r\n      \r\n      app.fileList = files\r\n      \r\n      files = files.map(el=>{\r\n        return {\r\n          ...el,\r\n          path:`./apps/${app.id}/root${el.path}`,\r\n          contentType:mime.getType(el.path)\r\n        };\r\n      })\r\n      files.push({\r\n        name:'meta.json',\r\n        path:`./apps/${app.id}/meta.json`,\r\n        content:JSON.stringify(app),\r\n        contentType:mime.getType('meta.json')\r\n      })\r\n  \r\n      var info = {...app}\r\n      delete info.fileList\r\n      files.push({\r\n        name:'info.json',\r\n        path:`./apps/${app.id}/info.json`,\r\n        content:JSON.stringify(info),\r\n        contentType:mime.getType('info.json')\r\n      })\r\n      files.push({\r\n        name:'index.html',\r\n        path:`./apps/${app.id}/index.html`,\r\n        content:cap.getAppContainerPage(app),\r\n        contentType:mime.getType('index.html')\r\n      })\r\n      files.push({\r\n        name:'index.html',\r\n        path:`./apps/${app.id}/manifest.json`,\r\n        content:cap.getAppContainerManifestJson(app),\r\n        contentType:mime.getType('manifest.json')\r\n      })\r\n  \r\n      app.directFileList = files\r\n\r\n      await fetch(`./apps/${app.id}`,{\r\n        method:'PUT',\r\n        mode: 'cors',\r\n        body:JSON.stringify(app),\r\n        headers: {\r\n          'Content-type': 'application/json'\r\n        },\r\n      })\r\n  \r\n      \r\n      // if ('serviceWorker' in navigator) {\r\n      //   navigator.serviceWorker.addEventListener('message', event => {\r\n      //     if(event.data.type === 'update'){\r\n      //       // window.open(`./apps/${app.id}/index.html`)\r\n      //       resolve(1)\r\n      //     }\r\n      //   });\r\n      //   navigator.serviceWorker.ready.then( registration => {\r\n      //     console.log('app',app);\r\n      //     registration.active.postMessage({\r\n      //       type:'update',\r\n      //       app\r\n      //     });\r\n      //   });\r\n      // }\r\n      \r\n    })\r\n  }\r\n  function start(){\r\n    window.open(`./apps/${appId}/index.html`)\r\n  }\r\n\r\n  function loadFromMeta(meta){\r\n    setAppId(meta.id)\r\n    setName(meta.name)\r\n    setType('obj')\r\n    setFileList(meta.fileList)\r\n    setStartup(meta.startup)\r\n    setIcoUrl(meta.icoUrl)\r\n    setIconUrl(meta.iconUrl)\r\n  }\r\n\r\n  async function loadMetaFile(){\r\n    return new Promise((res,rej)=>{\r\n      var inp = document.createElement('input')\r\n      inp.type = 'file'\r\n      inp.accept=\"application/json\"\r\n      \r\n      inp.onchange = (e)=>{\r\n        var file = e.target.files[0];\r\n        if (!file) {\r\n          rej(0);\r\n        }\r\n        var reader = new FileReader();\r\n        reader.onload = function(e) {\r\n          res(JSON.parse(e.target.result))\r\n        };\r\n        reader.readAsText(file);\r\n      }\r\n      inp.click()\r\n\r\n    })\r\n  }\r\n\r\n  useEffect(_=>{\r\n    (async _=>{\r\n      var meta = await (await fetch(`./apps/${appId}/meta.json`)).json()\r\n      loadFromMeta(meta)\r\n    })()\r\n    \r\n  },[])\r\n\r\n\r\n  return (\r\n    <div>\r\n      <AppBar position=\"fixed\" >\r\n        <Toolbar>\r\n            <IconButton key=\"1\" edge=\"start\" color=\"inherit\" onClick={onClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography key=\"2\" variant=\"h6\" style={{width:'100%'}} >\r\n              {name}\r\n            </Typography>\r\n            <IconButton key=\"3\" aria-label=\"save\" color=\"inherit\" title=\"生成id\" onClick={async _=>{\r\n              setAppId(uuidv4())\r\n            }}>\r\n              <AutorenewIcon />\r\n            </IconButton>\r\n            <IconButton key=\"4\" aria-label=\"save\" color=\"inherit\" title=\"加载\" onClick={async _=>{\r\n              var app = await loadMetaFile()\r\n              loadFromMeta(app)\r\n            }}>\r\n              <PublishIcon />\r\n            </IconButton>\r\n            <IconButton key=\"5\" aria-label=\"save\" color=\"inherit\" title=\"保存\" onClick={async _=>{\r\n              await save()\r\n              notifyService.success('保存成功')\r\n              onSaved()\r\n            }}>\r\n              <SaveIcon />\r\n            </IconButton>\r\n            <IconButton key=\"6\" aria-label=\"save\" color=\"inherit\" title=\"启动\" onClick={async _=>{\r\n              start()\r\n            }}>\r\n              <PlayCircleFilledIcon />\r\n            </IconButton>\r\n\r\n            {/* <Button color=\"inherit\" style={{minWidth:'100px'}} onClick={async _=>{\r\n              await save()\r\n              start()\r\n            }}>\r\n              保存&启动\r\n            </Button> */}\r\n          </Toolbar>\r\n        </AppBar>\r\n        <div style={{height:'56px'}}></div>\r\n        <div className=\"App\" style={{padding:'1em'}}>\r\n          {appInfoConfig.map((el,index)=>{\r\n            return <TextField key={index}  label={el.title} style={{width:'100%',marginTop:'1em'}} value={el.value} onChange={(e)=>{el.setValue(e.target.value)}} variant=\"outlined\"  />\r\n          })}\r\n        {/* <TextField  label=\"程序名称\" style={{width:'100%'}} value={name} onChange={(e)=>{setName(e.target.value)}} variant=\"outlined\" />\r\n        <TextField  label=\"起始文件Url\" style={{width:'100%',marginTop:'1em'}} value={startup}  onChange={(e)=>{setStartup(e.target.value)}} variant=\"outlined\" /> */}\r\n\r\n        <div style={{paddingTop:'1em'}}>\r\n          <StyledDropzone onDrop={acceptedFiles => {\r\n            console.log(acceptedFiles)  \r\n            setFileList(acceptedFiles)\r\n            setType('file')\r\n          }}>\r\n            <div style={{width:'100%'}}>\r\n              {\r\n                (_=>{\r\n                  if(!fileList.length){\r\n                    return (\r\n                      <h1 style={{height:'10em',margin:'1em',lineHeight:'10em'}}>文件拖入此处</h1>\r\n                    );\r\n                  }else{\r\n                    return (\r\n                      <div onClick={e=>e.stopPropagation()}>\r\n                        <Button style={{marginTop:'1em'}} variant=\"contained\" color=\"secondary\" onClick={()=>setFileList([])} >\r\n                          清空\r\n                        </Button>\r\n                        <List>\r\n                          {fileList.map(el=>{\r\n                          return(<ListItem key={el.path}>\r\n                            <ListItemAvatar>\r\n                              <Avatar>\r\n                                <h1 style={{fontSize:'100%'}}>\r\n                                  {\r\n                                    el.path.match(/\\.([^.]*)$/)&&el.path.match(/\\.([^.]*)$/)[1]\r\n                                  }\r\n                                </h1>\r\n                              </Avatar>\r\n                            </ListItemAvatar>\r\n                            <ListItemText primary={el.name} secondary={el.path} />\r\n                            {\r\n                              ({\r\n                                html:(\r\n                                  <Button key=\"s\" color=\"primary\"  onClick={_=>{setStartup(el.path)}}>\r\n                                  起始页\r\n                                  </Button>),\r\n                                png:(\r\n                                  [<Button key=\"p\" color=\"secondary\" onClick={_=>{setIconUrl(el.path)}}>\r\n                                    PWA图标\r\n                                  </Button>,<Button key=\"i\" color=\"secondary\" onClick={_=>{setIcoUrl(el.path)}}>\r\n                                    网页图标\r\n                                  </Button>]),\r\n                                ico:(\r\n                                  <Button key=\"i\" color=\"secondary\" onClick={_=>{setIcoUrl(el.path)}}>\r\n                                    网页图标\r\n                                  </Button>),\r\n                              })[el.path.match(/\\.([^.]*)$/)&&el.path.match(/\\.([^.]*)$/)[1]] || <div></div>\r\n                            }\r\n                          </ListItem>)\r\n                          })}\r\n                        \r\n                        </List>\r\n                      </div>\r\n                    ) \r\n                  }\r\n                })()\r\n              }\r\n            </div>\r\n          </StyledDropzone>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React,{useState,useEffect} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\n// import GetAppIcon from '@material-ui/icons/GetApp';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\r\nimport notifyService from '../utils/notifyService'\r\nimport PlayCircleFilledIcon from '@material-ui/icons/PlayCircleFilled';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n}));\r\n\r\nexport default function FolderList(props) {\r\n  const classes = useStyles();\r\n  const {getHandleClickOpen} = props\r\n\r\n  const [currentAppId,setCurrentAppId]= useState(\"default\")\r\n  const [appIds,setAppIds] = useState([])\r\n\r\n  // const [delApp,setDelApp] = useState(_=>{\r\n  //   console.error('del app fuc init error');\r\n  // })\r\n\r\n  const [changed,setChanged] = useState(uuidv4())\r\n\r\n  useEffect(() => {\r\n    (async _=>{\r\n      // debugger\r\n      var xx = await (await fetch(`./apps`)).json()\r\n      setAppIds(xx)\r\n\r\n      if (navigator.serviceWorker) {\r\n        navigator.serviceWorker.addEventListener('message',async event => {\r\n          if(event.data.type === 'update'){\r\n            var xx = await (await fetch(`./apps`)).json()\r\n            setAppIds(xx)\r\n          }\r\n        })\r\n      }\r\n    })()\r\n\r\n    // if (navigator.serviceWorker) {\r\n    //   navigator.serviceWorker.addEventListener('message', event => {\r\n    //     if(event.data.type === 'getAppIds'){\r\n    //       console.log(event.data.value);\r\n    //       setAppIds(event.data.value)\r\n    //     }\r\n        \r\n    //   });\r\n    //   navigator.serviceWorker.ready.then( registration => {\r\n    //     registration.active.postMessage({\r\n    //       type:'getAppIds',\r\n    //     });\r\n    //   });\r\n    // }\r\n  }, [changed])\r\n\r\n  function AppListItem(props){\r\n    const {id} = props\r\n\r\n    console.log(id);\r\n\r\n    const [meta,setMeta] = useState({\r\n      id,\r\n      name:'--'\r\n    })\r\n\r\n    // const [deleted,setDeleted] = useState(false)\r\n\r\n    useEffect(_=>{\r\n      // if(deleted) return\r\n      // console.log(id);\r\n      (async _=>{\r\n        var meta = await (await fetch(`./apps/${id}/info.json`)).json()\r\n        setMeta(meta)\r\n      })()\r\n\r\n      return ()=>{\r\n        setMeta([])\r\n      };\r\n    },[])\r\n\r\n    return (\r\n      <ListItem key={id}>\r\n        <ListItemAvatar>\r\n          <Avatar>\r\n            <AppsIcon />\r\n          </Avatar>\r\n        </ListItemAvatar>\r\n        <ListItemText primary={meta.name} secondary={meta.id} />\r\n        <ListItemSecondaryAction>\r\n          <IconButton edge=\"end\" color=\"primary\" aria-label=\"download\" onClick={async _=>{\r\n            window.open(`./apps/${id}/index.html`)\r\n            }}>\r\n              <PlayCircleFilledIcon />\r\n            </IconButton>\r\n          <IconButton edge=\"end\" color=\"primary\" aria-label=\"download\" onClick={async _=>{\r\n            var text = await (await fetch(`./apps/${id}/meta.json`)).json()\r\n            var fileBlob = new Blob([JSON.stringify(text) ], {type: \"application/octet-binary\"});\r\n\r\n            var link = document.createElement(\"a\");\r\n            link.setAttribute(\"href\", URL.createObjectURL(fileBlob));\r\n            link.setAttribute(\"download\", `${meta.name}.json`);\r\n            link.appendChild(document.createTextNode(\"Save file\"));\r\n            link.click()\r\n          }} >\r\n            <GetAppIcon />\r\n          </IconButton>\r\n          <IconButton edge=\"end\" color=\"primary\" aria-label=\"edit\" onClick={getHandleClickOpen(id)}>\r\n            <EditIcon />\r\n          </IconButton>\r\n          <IconButton edge=\"end\" color=\"secondary\" aria-label=\"delete\" onClick={async _=>{\r\n            // delApp(id) \r\n\r\n            await fetch(`./apps/${id}`,{\r\n              method:'Delete'\r\n            })\r\n            notifyService.success('删除成功')\r\n            \r\n            setChanged(uuidv4())\r\n      \r\n            \r\n          }}>\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </ListItemSecondaryAction>\r\n      </ListItem>\r\n      // window.open(`./apps/${appId}/index.html`)\r\n    )\r\n  }\r\n\r\n  return (\r\n    <List className={classes.root}>\r\n      {appIds.map(el=>{\r\n        return (\r\n          <AppListItem id={el} key={el}></AppListItem>\r\n        )\r\n      })}\r\n      \r\n      \r\n    </List>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            程序容器\r\n          </Typography>\r\n          {props.children}\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React,{useEffect,useState} from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\n\nimport Slide from '@material-ui/core/Slide';\n\nimport AppInfo from './components/AppInfo'\nimport AppList from './components/AppList'\nimport MainBar from './components/MainBar'\nimport installSw from './utils/installSw'\n\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport AddIcon from '@material-ui/icons/Add';\nimport { v4 as uuidv4 } from 'uuid';\n\n\nconst useStyles = makeStyles((theme) => ({\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    marginLeft: theme.spacing(2),\n    flex: 1,\n  },\n}));\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport default function FullScreenDialog() {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n\n  const getHandleClickOpen = (el) =>{\n    const handleClickOpen = () => {\n      setCurrentAppId(el)\n      setOpen(true);\n    };\n    return handleClickOpen\n  }\n\n  const [changed,setChanged] = useState(uuidv4())\n  const handleSaved = () =>{\n    setChanged(uuidv4())\n  }\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const [currentAppId,setCurrentAppId]= useState(\"default\")\n\n  return (\n    <div>\n      <MainBar>\n        <IconButton aria-label=\"save\" color=\"inherit\" title=\"新增\" onClick={_=>{\n          getHandleClickOpen(uuidv4())()\n        }}>\n          <AddIcon />\n        </IconButton>\n      </MainBar>\n\n      <AppList getHandleClickOpen={getHandleClickOpen} key={changed}></AppList>\n\n      <Dialog fullScreen open={open} onClose={handleClose} TransitionComponent={Transition}>\n        <AppInfo onClose={handleClose} onSaved={handleSaved} appId={currentAppId} />\n      </Dialog>\n    </div>\n  );\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // <React.StrictMode>\n    <App />,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}